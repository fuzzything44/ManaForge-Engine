// This document was generated with the command: asciidoc.py -a icons -a toc2 -a iconsdir=icons\ -a source-highlighter=highlight



Component
==========
:Actor: link:Actor.html[`Actor`]

Defined in header link:./../src/ManaForgeEngine/Public/Component.h[`<Component.h>`]

== Explanation ==

A `Component` is a part of an {Actor}. It is used to represent any part of an {Actor} that is to have a specific function.

Each instance if a `Component` is specific to that {Actor}.

== Member Types ==

|==================================================================================================================
| *Type and name*				| *Explanation*

|`protected` {Actor} `& owner`  | The owning {Actor} 

|==================================================================================================================


== Constructors ==

=== Main Constructor ===
[source, C++]
--------------------------------------------
explicit Component(
    Actor& owner              // <1>
)
--------------------------------------------

<1> The {Actor} to add this `Component` to.

.Explanation
Creates a basic component. Usually called through base classes.

== Member Functions ==

=== `getOwner` ===
[source, C++]
-----------------------------------------
Actor& Component::getOwner()
-----------------------------------------

.Explanation
Gets the owning {Actor}, returning a refrence.

.Return Value
Returns the owning {Actor}, as an {Actor} `&`

=== `getOwner (const)` ===
[source, C++]
-----------------------------------------
const Actor& Component::getOwner const()
-----------------------------------------

.Explanation
Gets the owning {Actor}, returning a const refrence.

.Return Value
Returns the owning {Actor}, as an `const` {Actor} `&`


== See Also ==
 . {Actor}
